openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
- url: https://jobs-backend-api.herokuapp.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: register user
      operationId: registeruser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registeruserrequest'
            example:
              name: peter
              email: xpyz@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: login user
      operationId: loginuser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginuserrequest'
            example:
              email: xpyz@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: create jobs
      operationId: createjobs
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createjobsrequest'
            example:
              company: google
              position: intern
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Jobs
      summary: get all jobs for a user
      operationId: getalljobsforauser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
  /jobs/{id}:
    parameters:
    - in: path
      name: id
      schema:
        type: string
      required: true
      description: the job id
    get:
      tags:
      - Jobs
      summary: get single job
      operationId: getsinglejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      
    patch:
      tags:
      - Jobs
      summary: update a job
      operationId: updateajob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateajobrequest'
            example:
              company: facebook
              position: full-stack developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []

    delete:
      tags:
      - Jobs
      summary: delete a job
      operationId: deleteajob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    registeruserrequest:
      title: registeruserrequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: peter
        email: xpyz@gmail.com
        password: secret
    loginuserrequest:
      title: loginuserrequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: xpyz@gmail.com
        password: secret
    createjobsrequest:
      title: createjobsrequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: hebrew
        position: whatevs
    updateajobrequest:
      title: updateajobrequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: facebook
        position: full-stack developer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Auth
  description: ''
- name: Jobs
  description: ''